create schema  common_db;
use  common_db;

create table credentials(id bigint(11) auto_increment primary key,email varchar(100),phone varchar(100),password varchar(20),usertype varchar(10));

create table tokens(token varchar(20),userid bigint(11),status varchar(10),FOREIGN KEY (userid) REFERENCES credentials(id));


insert into credentials(email,phone,password,usertype) values('sanjib@gmail.com','1234','Test@1234','customer')

SELECT * FROM credentials;
SELECT * FROM tokens;

DELETE FROM credentials where id in(2,3);
DELETE FROM tokens where userid in (2,3);



create schema  catalog_db;
use  catalog_db;

DELETE FROM product where product_id in(4,5);

drop table product;

create table product(product_id int(11) auto_increment primary key,product_name varchar(100) not null,price double(10,2) not null,description varchar(100), quantity int(11) DEFAULT 0, category ENUM("BOOKS","FASHION","ELECTRONICS","FURNITURE","GROCERIES"),status ENUM("AVAILABLE","OUTOFSTOCK") DEFAULT "OUTOFSTOCK" not null,seller_id int(11) not null);

{
    "productName":"Spring MVC",
    "price": 200.91,
	"description" : "Spring Book",
    "category":"BOOKS"
}


create schema  inventory_db;
use  inventory_db;
drop table inventory if exists;
create table inventory(inventory_id int(11) auto_increment primary key,
product_id int(11) not null,
product_name varchar(100) not null,
seller_id int(11) not null,
quantity int(11) not null,
address varchar(250) not null)

DELETE from inventory where inventory_id in(9,10,11);

Inventory
	
{
    "address":"10 Downing Street",
	"quantity" : 10
}


create schema  customer_db;
use  customer_db;

DELETE from item where cart_id <=17;
DELETE from cart where cart_id <=17

drop table cart if exists;
create table cart(cart_id int(11) auto_increment primary key,
customer_id int(11) not null,
cart_value double(10,2),
address varchar(500),
payment_info varchar(500))

drop table item if exists;
create table item(item_id int(11) auto_increment primary key,cart_id int(11),
product_id int(11) not null,
product_name varchar(100) not null,
quantity int(11) not null,
price double(10,2) not null,
FOREIGN KEY (cart_id) REFERENCES cart(cart_id))

{
    "productId":"1",
	"quantity" : 1
}

{
    "items": [
        {
            "productId": 1,
            "productName": "Java 2",
            "quantity": 1,
            "price": 300.51
        }
    ],
    "address": "2 Rawdon Street",
    "paymentInfo": "CreditCard:1234:05-25:377"
}


create schema  payment_db;
use  payment_db;

DELETE from payment where payment_id =1;


drop table payment;

create table payment(payment_id int(11) auto_increment primary key,
customer_id bigint(11) not null,
payment_info varchar(500),
balance double(10,2)
)


create schema school_db;
use school_db;

drop table teacher;
create table teacher(id int(11) auto_increment primary key,
name varchar(100) not null);

drop table course;
create table course(id int(11) auto_increment primary key,
name varchar(100) not null,teacher_id int(11), FOREIGN KEY (teacher_id) REFERENCES teacher(id));

drop table student;
create table student(id int(11) auto_increment primary key,
name varchar(100) not null);

drop table student_course_details;
create table student_course_details(id int(11) auto_increment primary key,
student_id int(11), FOREIGN KEY (student_id) REFERENCES student(id),
course_id int(11), FOREIGN KEY (course_id) REFERENCES course(id));

drop table student_assignment_details;
create table student_assignment_details(id int(11) auto_increment primary key,
name varchar(100) not null,
due_date varchar(100) not null,
days_remaining varchar(100) not null,
student_id int(11), FOREIGN KEY (student_id) REFERENCES student(id),
course_id int(11), FOREIGN KEY (course_id) REFERENCES course(id));




